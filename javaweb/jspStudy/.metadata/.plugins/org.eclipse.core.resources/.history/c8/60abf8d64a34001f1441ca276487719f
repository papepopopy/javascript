package ex01.sample03.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;
import ex01.sample03.vo.MemberVO;

public class MemberDAOImpl implements MemberDAOService {

    private Connection conn;
    private PreparedStatement pstmt;
    private ResultSet rs;
    private DataSource dataSource;

    public MemberDAOImpl() {
        connDB();

        try {
            Context ctx = new InitialContext();
            Context envContext = (Context) ctx.lookup("java:comp/env");
            dataSource = (DataSource) envContext.lookup("jdbc/oracle");

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    @Override
    public List<MemberVO> listMembers() {
        List<MemberVO> list = new ArrayList<MemberVO>();

        try {
            conn = dataSource.getConnection();

            String sql = "select * from t_member";
            pstmt = conn.prepareStatement(sql);
            rs = pstmt.executeQuery();

            while (rs.next()) {
                String id = rs.getString("id");
                String pwd = rs.getString("pwd");
                String name = rs.getString("name");
                String email = rs.getString("email");
                Date joinDate = rs.getDate("joinDate");

                MemberVO vo = new MemberVO();
                vo.setId(id);
                vo.setPwd(pwd);
                vo.setName(name);
                vo.setEmail(email);
                vo.setJoinDate(joinDate);

                list.add(vo);
            }
            rs.close();
            pstmt.close();
            conn.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        return list;
    }

    @Override
    public int regMember(MemberVO memberVO) {
        int result = 0;

        String sql = "insert into t_member (id, name, pwd, email) values (?, ?, ?, ?)";

        try {
            conn = dataSource.getConnection();
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, memberVO.getId());
            pstmt.setString(2, memberVO.getName());
            pstmt.setString(3, memberVO.getPwd());
            pstmt.setString(4, memberVO.getEmail());

            result = pstmt.executeUpdate();

            pstmt.close();
            conn.close();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        return result;
    }

    @Override
    public int modMember(MemberVO memberVO) {
        int result = 0;
        // Implement update logic here
        return result;
    }

    @Override
    public MemberVO viewMember(String id) {
        MemberVO vo = new MemberVO();
        // Implement retrieve logic here
        return vo;
    }

    @Override
    public int removeMember(MemberVO memberVO) {
        int result = 0;
        // Implement delete logic here
        return result;
    }

    private void connDB() {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            System.out.println("OracleDriver 로딩 성공");
        } catch (ClassNotFoundException e) {
            System.err.println("OracleDriver 로딩 실패: " + e.getMessage());
        }
    }
}
