package chap11;

import java.text.CompactNumberFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Calendar;
import java.util.Date;

import chap04.vo.Data;

public class DateClassCollectionTest {

	public static void main(String[] args) {
		Calendar cal = Calendar.getInstance();
		Date data = cal.getTime();
//		System.out.println(data); //Mon May 27 14:46:52 KST 2024
//		
//		System.out.println(cal.get(Calendar.YEAR)); //2024
//		System.out.println(cal.get(Calendar.MONTH)+1); //5
//		System.out.println(cal.get(Calendar.DAY_OF_MONTH)); //27
//		System.out.println(cal.get(Calendar.HOUR_OF_DAY)); // 14
//		System.out.println(cal.get(Calendar.MINUTE)); //51
//		System.out.println(cal.get(Calendar.SECOND)); //52
		
//		숫자 표시
		int myMoney = -5000;
//		System.out.println(myMoney); //-5000
		
//		# 대신 0이 가능하다 
//		# 경우 0 -> 공백 / 0 경우 0 -> 0
//		DecimalFormat 사용 예시
		DecimalFormat df = new DecimalFormat("#,###,##");
//		System.out.println(df.format(myMoney)); //-5,000
		
		DecimalFormat df2 = new DecimalFormat("#,###.##0");
		DecimalFormat df3 = new DecimalFormat("#.#E0");
		DecimalFormat df4 = new DecimalFormat("(수익)#.##0; (손실)#,##0");
		System.out.println(df2.format(5000000000000000000L)); // -5000 
		System.out.println(df3.format(5000000000000000000L)); // -5000 
		System.out.println(df4.format(50000)); 
		System.out.println(df4.format(-50000)); 
		System.out.println(df4.format(0)); 
		
		DecimalFormat df5 = new DecimalFormat("##0%"); // 곱하기100
		System.out.println(df5.format(0.01)); 
		
//		숫자를 줄여서 표시
		int users = 14638;
		int views = 1500;
		NumberFormat nf = CompactNumberFormat.getCompactNumberInstance();
		System.out.printf("구독자 %s\n", nf.format(users)); 
		System.out.printf("조회수 %s\n", nf.format(views));
		
//		날짜, 시간 형식
		Data today = new Data();
		System.out.println("today : "+today);
		
		SimpleDateFormat f1 = new SimpleDateFormat("YYYY년 NN월 dd일 E HH시 MM분 ss초");
		System.out.println(f1. format(data));
		
//		날짜, 정보 클래스
		LocalDate ldata1 = LocalDate.now();
		System.out.println("localdate : "+ ldata1);
		
		System.out.printf("%d년은 %s입니다. \n",ldata1.getYear(), (ldata1.isLeapYear()));
		System.out.println(ldata1.minusYears(1) +","+ldata1.plusYears(1));
		System.out.println(ldata1.minusMonths(1)+","+ldata1.plusMonths(1));
		System.out.println(ldata1.minusWeeks(1)+","+ldata1.plusWeeks(1));
		System.out.println(ldata1.minusDays(100)+","+ldata1.plusDays(100));
		
//		문자형 -> 날짜형으로 변경
		LocalDate ldate2 = LocalDate.parse("2024-05-27"); 
		System.out.println(ldate2.plusDays(365));
		
		System.out.printf("%d년은 %s입니다. \n",ldate2.getYear(), (ldate2.isLeapYear()));
		
		
		LocalTime time1 = LocalTime.now();
		
	}

}