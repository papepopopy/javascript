package ex05.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.catalina.tribes.membership.Membership;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import ex05.controller.vo.JsonVO;

@SuppressWarnings("serial")
@WebServlet("/json")
public class AjaxTest2 extends HttpServlet {

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		System.out.println("/json 요청 받았음.");

		// 문자형 숫자 -> 숫자: Integer.parse("문자열값")
		// json형식 문자열을 받음 -> json객체로 전환
		String jsonInfoArray = req.getParameter("jsonInfoArray");
		System.out.println("jsonInfoArray:" + jsonInfoArray);
		List<JsonVO> list = new ArrayList();

		try {
			// 객체 => 문자열
			JSONParser jsonParser = new JSONParser(); // 겍체 생성
			// 문자열 => 객체
			// 배열구조
			// JSONArray jsonArray = (JSONArray)jsonParser.parse(jsonInfoArray);
			JSONObject jsonObject = (JSONObject) jsonParser.parse(jsonInfoArray);

			System.out.println("받은 JSON 데이터");
			System.out.println(jsonObject.toJSONString());

			System.out.println("회원 정보");
			System.out.println(jsonObject.get("member"));

			// "member" 키의 값인 배열 구조를 가져옴
			JSONArray jsonArray = (JSONArray) jsonObject.get("member"); // 배열구조
			// jsonArray = (JSONArray) jsonObject.get("member");

			System.out.println("member 값 배열구조");

			for (int i = 0; i < jsonArray.size(); i++) {
				JSONObject memberInfo = (JSONObject) jsonArray.get(i);

				/*
				 * System.out.println(memberInfo.get("name"));
				 * System.out.println(memberInfo.get("age"));
				 * System.out.println(memberInfo.get("gender"));
				 * System.out.println(memberInfo.get("nickname"));
				 */
				System.out.println("JSON 속성값 String VO에 전달");
				String name = memberInfo.get("name").toString();
				int age = Integer.parseInt(memberInfo.get("age").toString());
				String gender = memberInfo.get("gender").toString();
				String nickname = memberInfo.get("nickname").toString();

				JsonVO vo = new JsonVO(name, age, gender, nickname);
				System.out.println(vo.toString());

				list.add(vo);
			}

			System.out.println(list);

		} catch (Exception e) {
			System.out.println(e.getMessage());
			resp.sendError(HttpServletResponse.SC_BAD_REQUEST, "JSON 파싱 오류");
		}
		// String jsonInfo = req.getParameter("jsonInfo");
		// System.out.println("jsonInfo:"+jsonInfo);

		/*
		 * try { JSONParser jsonParse = new JSONParser(jsonInfo); } catch (Exception e)
		 * { System.out.println(e.getMessage()); }
		 */
		
		 resp.setCharacterEncoding("utf-8");
		 resp.setContentType("text/html; charset=utf-8"); PrintWriter out =
		 resp.getWriter();
		 String param = req.getParameter("param"); out.print("Json데이터 요청받았습니다.");
		 
		 //자바객체 data > json > string > 전송
		 JSONObject member = new JSONObject();
		 JSONArray valueArray = new JSONArray();
		 
		 for (JsonVO vo : list) {
			 JSONObject memberInfo = new JSONObject();
			 
			 System.out.println(vo);
		 
			 memberInfo.put("name",vo.getname); //객체 생성
			 memberInfo.put("age",vo.getgender); //객체 생성
			 memberInfo.put("gender",vo.getgender); //객체 생성
			 memberInfo.put("nickname",vo.getnickname); //객체 생성
			 
			 System.out.println(memerInfo.toJSONString);
			 
			 valueArray.add(memberInfo);
		 }
		 
		 members.put("members", valueArray);
		 String jsonMembers = members.toJSONString();
		 System.out.println(jsonMembers);
		 
		 out.print(jsonMembers);
	}
}